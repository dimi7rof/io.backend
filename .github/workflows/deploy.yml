name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type (major, minor, patch)'
        required: false
        default: 'patch'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ github.event.inputs.tag || '1.0.1' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to get tags

      - name: Get Latest Tag
        id: get_tag
        run: |
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest_tag"
          if [[ -z "$latest_tag" ]]; then
            latest_tag="0.0.0"
          fi
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Get Commits Since Last Tag
        id: get_commits
        run: |
          commits=$(git log "$latest_tag"..HEAD --pretty=format:"- %s")
          echo -e "Commits since last tag:\n$commits"
          echo "commits<<EOF" >> $GITHUB_ENV
          echo "$commits" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Calculate Next Tag
        id: next_tag
        run: |
          IFS='.' read -r major minor patch <<< "$latest_tag"
          bump_type="${{ github.event.inputs.version_bump }}"
          case "$bump_type" in
            major) major=$((major + 1)); minor=0; patch=0 ;;
            minor) minor=$((minor + 1)); patch=0 ;;
            patch) patch=$((patch + 1)) ;;
            *) echo "Invalid version bump type"; exit 1 ;;
          esac
          new_tag="$major.$minor.$patch"
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: dimi7rof/cvbackend:${{ env.IMAGE_TAG }}
